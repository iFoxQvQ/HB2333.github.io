<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>迈入开源世界的第一步：GitHub PR</title>
      <link href="/2025/05/17/github_pull_request_record/"/>
      <url>/2025/05/17/github_pull_request_record/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>近期在搞毕设，学了制作仿 ChatGPT 对话界面，想着找找还有没有其他实现的方法，在 GitHub 上搜相关项目的时候，找到一个自己觉得可以 PR 的项目，遂记录本人第一次 PR 过程。</p><h1 id="PR流程"><a href="#PR流程" class="headerlink" title="PR流程"></a>PR流程</h1><p>在网上找了很多关于 PR 的教程，大概可以分为以下几个步骤：</p><ol><li>先 Fork 别人的项目到自己的仓库里</li><li>clone 到本地进行修改，修改的时候不会影响到别人的仓库，可以放心修改</li><li>修改完后，push 回自己的仓库</li><li>如果一切就绪，那么就可以提交 PR 请求</li><li>当作者认同你的修改，那么他就会将你的代码合并到 master 上，然后自己也会成为这个项目的 contributor。</li></ol><h1 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h1><h2 id="Fork-项目"><a href="#Fork-项目" class="headerlink" title="Fork 项目"></a>Fork 项目</h2><p>首先 Fork 打算提交 PR 的项目到自己仓库里。</p><p><img src="https://s2.loli.net/2025/05/17/6l8aGb7hRoxBz9W.png" alt="image-20250517171934590"></p><p><img src="https://s2.loli.net/2025/05/17/LxC9VTckYjuqQF3.png" alt="image-20250517172134744"></p><h2 id="Clone-到本地进行修改"><a href="#Clone-到本地进行修改" class="headerlink" title="Clone 到本地进行修改"></a>Clone 到本地进行修改</h2><p>在本地电脑找了个方便修改项目的地方，打开 Git Bash 或者命令行，用以下命令在本地克隆项目的代码库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;repository-url&gt;</span><br></pre></td></tr></table></figure><p>这样就能在本地拥有项目的代码了。</p><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><p>在本地创建一个新的分支来进行开发工作。</p><p>PS：虽然第一个 PR 从 main 提交完全没有问题，但是如果需要同时提交2个 PR ，新建分支更好工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>这个命令是在本地创建一个新的分支，并且切换到这个分支。</p><p>可以在这个新分支上进行代码修改和开发。</p><h2 id="更新本地代码"><a href="#更新本地代码" class="headerlink" title="更新本地代码"></a>更新本地代码</h2><p>在每一次写代码之前，都需要确认本地分支的代码是最新的，不然提交的时候有别人先提交会冲突。</p><p>更新本地 main 代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git fetch upstream</span><br><span class="line">git checkout main</span><br><span class="line">git rebase upstream/main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新分支的</span></span><br><span class="line">git checkout &lt;branch-name&gt;</span><br><span class="line">git rebase main</span><br></pre></td></tr></table></figure><p>这里因为我使用的是命令行进行 git clone ，然后使用 git bash 进行更新本地 main ，出现了以下情况。其原因是：Git 在本地仓库配置中找不到远程仓库信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch upstream</span><br><span class="line">fatal: <span class="string">&#x27;upstream&#x27;</span> does not appear to be a git repository</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure><p>这时候先查看配置的远程仓库名称以及它们对应的抓取 (fetch) 和推送 (push) URL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line">origin  https://github.com/iFoxQvQ/cloud-web.git (fetch)</span><br><span class="line">origin  https://github.com/iFoxQvQ/cloud-web.git (push)</span><br></pre></td></tr></table></figure><p>再手动添加 upstream 远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add upstream https://github.com/iFoxQvQ/cloud-web.git</span><br></pre></td></tr></table></figure><p>此时进行更新就没有问题了。</p><p>解决问题参考的帖子：<a href="https://stackoverflow.com/questions/32912359/git-error-upstream-does-not-appear-to-be-a-git-repository">GitHub - Git 错误 - Stack Overflow</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch upstream</span><br><span class="line">From https://github.com/iFoxQvQ/cloud-web</span><br><span class="line"> * [new branch]      main       -&gt; upstream/main</span><br></pre></td></tr></table></figure><h2 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h2><p>写代码写代码写代码</p><h2 id="Commit-和-Push"><a href="#Commit-和-Push" class="headerlink" title="Commit 和 Push"></a>Commit 和 Push</h2><p>写完代码后，使用以下命令将代码提交到远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -s -m <span class="string">&quot;Commit message&quot;</span></span><br><span class="line">git push origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>代码提交到远程仓库后，可以在 GitHub 上创建一个新的 PR 了。</p><p>打开自己 Fork 的仓库页面，在页面上方选择 “ Pull requests ” ，然后点击 “ New pull request ” 按钮。</p><p><img src="https://s2.loli.net/2025/05/17/d7RXErZaeBDz6uf.png" alt="image-20250517191246380"></p><p><img src="https://s2.loli.net/2025/05/17/yM1sJr9qnj26ohb.png" alt="image-20250517191335436"></p><p>选择修改的分支来进行提交。</p><p><img src="https://s2.loli.net/2025/05/17/SBlLQKpMJ5gvwD1.png" alt="image-20250517191549648"></p><p>然后进行修改 PR 标题和描述内容。完成后点击 Create pull request 按钮。</p><p><img src="https://s2.loli.net/2025/05/17/uaVFR3Kc7Nr1jqW.png" alt="image-20250517191503435"></p><p>这样就可以创建一个新的PR了，然后就是等作者同意合并了。</p><h3 id="可能会遇到的问题"><a href="#可能会遇到的问题" class="headerlink" title="可能会遇到的问题"></a>可能会遇到的问题</h3><h4 id="reviewers-提出修改意见"><a href="#reviewers-提出修改意见" class="headerlink" title="reviewers 提出修改意见"></a>reviewers 提出修改意见</h4><p>提交 PR 很多时候会因为各种各样的问题不会被马上合入，Reviewers 会提出修改意见。这时可以返回去继续根据意见修改代码，然后通过执行和第一次 Commit 一样步骤的命令，GitHub 会自动把新增的 Commits 全部追加到一个未合入 PR 里去。</p><h4 id="PR-产生冲突"><a href="#PR-产生冲突" class="headerlink" title="PR 产生冲突"></a>PR 产生冲突</h4><p>每次写代码前应更新本地代码，尽量避免这种情况。但有时候 PR 被阻塞了一段时间，可能别人修改了一行代码，被抢先合入，这时候 PR 就出现冲突了。</p><p>现在本地执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先切回到 main 分支</span></span><br><span class="line">git checkout main</span><br><span class="line"><span class="comment"># 拉取上游代码</span></span><br><span class="line">git fetch upstream</span><br><span class="line"><span class="comment"># 更新本地 main</span></span><br><span class="line">git rebase --hard upstream/main</span><br></pre></td></tr></table></figure><p>本地的 main 分支就和远程的代码完全一致了，然后将 main 分支代码合入自己的分支，同时解决冲突。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch-name&gt;</span><br><span class="line">git rebase main</span><br></pre></td></tr></table></figure><p>冲突部分内容一般会像以下这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">2 Text 1.</span><br><span class="line">3 Text 2 changed by me.</span><br><span class="line">4 =======</span><br><span class="line">5 Text 1 changed by other.</span><br><span class="line">6 Text 2.</span><br><span class="line">7 &gt;&gt;&gt;&gt;&gt;&gt;&gt; from upstream/master</span><br></pre></td></tr></table></figure><p>将其修改为你认为最好的结果。例如以下三种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Text 1 changed by other.</span><br><span class="line">2 Text 2 changed by me.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Text 1 changed by other.</span><br><span class="line">2 Text 2.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Text 1.</span><br><span class="line">2 Text 2 changed by me.</span><br></pre></td></tr></table></figure><p>然后保存文件，再进行第一次 PR 操作即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -s -m <span class="string">&quot;Commit message&quot;</span></span><br><span class="line">git push origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>这里我推荐一个练习自己解决 PR 冲突的课程，自己看后觉得挺不错的。</p><p><a href="https://learn.microsoft.com/zh-cn/training/modules/resolve-merge-conflicts-github/?WT.mc_id=DT-MVP-5003916">使用 GitHub 上的合并冲突解决解决竞争性提交 - Training | Microsoft Learn</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quest 2 一体机版 beatsaber 节奏光剑 回放+添加模型</title>
      <link href="/2024/09/29/QuestBSReplay/"/>
      <url>/2024/09/29/QuestBSReplay/</url>
      
        <content type="html"><![CDATA[<h1 id="节奏光剑-BeatSaber-一体机版-开启第三人称视角回放功能"><a href="#节奏光剑-BeatSaber-一体机版-开启第三人称视角回放功能" class="headerlink" title="节奏光剑(BeatSaber) 一体机版 开启第三人称视角回放功能"></a>节奏光剑(BeatSaber) 一体机版 开启第三人称视角回放功能</h1><h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>我在网上别人晒的 BeatSaber 的<a href="https://www.bilibili.com/video/BV1hS4y1g7zq/">视频</a>的时候，别人录制的是第三人称视角加自定义的角色模型。因为一体机版直接内录是第一人称，FOV有限并且很抖，我就算录下来打的不错的的发给别人，别人也毫无体验感。</p><p>因为如果用 PC 串流会影响延迟，一体机内的 BS 在我用下来体验还算可以，为此我想在一体机内通过第三人称录制出来视频发给别人。</p><p>在简中网几乎铺天盖地的是某家广告水印恶心糊脸的 Quest 一体机版本，第三人称录制大部分都是 PC 端的教程。于是自己就去寻找相关 Mod 并出此教程。</p><p>以下资料都是从网上搜集而来，若有侵权请联系我删除。</p><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>首先你得一体机版本得是用 BMBF Patch 过的，然后头显里面得安装 BMBF 这个 APP。</p><h3 id="加载-Mod"><a href="#加载-Mod" class="headerlink" title="加载 Mod"></a>加载 Mod</h3><p>在头显内打开BMBF，照图内操作即可</p><p><img src="https://s2.loli.net/2024/09/30/s5liR2nZAXg9D8z.png" alt="image-20240930103717409"></p><p>依次下载以下模型：<code>VRM Qavatars</code>，这是模型 Mod。<code>Replay</code> 重播Mod，<code>BeatLeader</code> ，重播 Mod 前置 Mod。</p><p><img src="https://s2.loli.net/2024/09/29/hBHqV2aTtvQ5XxO.png" alt="image-20240929225531185"></p><p><img src="https://s2.loli.net/2024/09/29/BQLPi5pjTeuGOJ1.png" alt="image-20240929225546683"></p><p><img src="https://s2.loli.net/2024/09/29/w7qr2EF4jokQHeR.png" alt="image-20240929225556076"></p><p>下载完成后点击右上角红色按钮进行同步，待同步完成即可。</p><p><img src="https://s2.loli.net/2024/09/30/whcxZyPevH2UXqY.png" alt="image-20240930103846392"></p><h3 id="模型上传"><a href="#模型上传" class="headerlink" title="模型上传"></a>模型上传</h3><p><strong>具体步骤</strong></p><ol><li>打开 BMBF ，进入 Tools 查看当前头显的局域网 IP 地址。</li><li>通过在头显内 BMBF 内看到的 IP 地址，通过在<strong>同一局域网</strong>下的 PC 进入网页版 BMBF。</li><li>点击 Upload 功能，上传后缀为 *.vrm 的模型文件即可。</li></ol><p>之后进入游戏在主页面左边的 Avatar 就能看到上传的模型。</p><p><img src="https://s2.loli.net/2024/09/29/WlqeSyGVAwPLdME.png" alt="image-20240929225728167"></p><p><img src="https://s2.loli.net/2024/09/30/sbXt2pqogynx7hS.png" alt="image-20240930104349900"></p><p><img src="https://s2.loli.net/2024/09/30/Y3X7elBhcpGV9xQ.png" alt="image-20240930104437472"></p><p><img src="https://s2.loli.net/2024/09/30/1LC7RXhGpZiKNem.png" alt="image-20240930104559957"></p><h3 id="回放并录制"><a href="#回放并录制" class="headerlink" title="回放并录制"></a>回放并录制</h3><p>当你完成一场游戏后会出现回放按钮，如图。此时回放功能已经正常了，你只需要打开头显的内录功能，然后点击 WATCH REPLAY 即可。</p><p>不过录出来的视角有点奇怪，在下一节我会放出来我的回放视角参数。</p><p>Replay Mod 有自带录制回放功能，博主没有使用过，感兴趣的可以自行探索（评论区开放）。</p><p><img src="https://s2.loli.net/2024/09/30/A7N8T9whstKbZH1.png"></p><p><img src="https://s2.loli.net/2024/09/30/X1IzcpbVGWimQsf.png" alt="image-20240930105038822"></p><h3 id="回放视角参数"><a href="#回放视角参数" class="headerlink" title="回放视角参数"></a>回放视角参数</h3><p>示例：</p><p><img src="https://s2.loli.net/2024/09/29/Dxbj7CSsMI5KiXu.gif" alt="com.beatgames.beatsaber-20240929-222933 00_00_24-00_00_30"></p><p><strong>在 REPLAY SETTINGS 里设置</strong></p><p>以下设定 <strong>必须</strong> 得开第三人称视角不然会没法加载模型头部，而且也没法调整视角朝向。</p><p>这里的 Enable Avatar <strong>必须关</strong>，不然原版模型会挡住你的模型。</p><p><img src="https://s2.loli.net/2024/09/30/hCZ6Bg3JvUymDXw.png" alt="image-20240930105235233"></p><p><img src="https://s2.loli.net/2024/09/30/e3IJTCDFrWMofkv.png" alt="image-20240930105429039"></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quest </tag>
            
            <tag> beatsaber </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OverTheWire闯关笔记Bandit篇</title>
      <link href="/2024/07/01/OverTheWireBandit/"/>
      <url>/2024/07/01/OverTheWireBandit/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2024/07/17/JHwRqVAOukCnN8p.jpg"></p><h1 id="OverTheWire闯关笔记"><a href="#OverTheWire闯关笔记" class="headerlink" title="OverTheWire闯关笔记"></a>OverTheWire闯关笔记</h1><h2 id="前往连接"><a href="#前往连接" class="headerlink" title="前往连接"></a>前往连接</h2><p><a href="https://overthewire.org/wargames/">OverTheWire: Wargames</a></p><h2 id="Bandit"><a href="#Bandit" class="headerlink" title="Bandit"></a>Bandit</h2><h3 id="0级"><a href="#0级" class="headerlink" title="0级"></a>0级</h3><p>此级别的目标是让您使用 SSH 登录游戏。 您需要连接的主机位于端口 <code>2220</code> 上的<code>bandit.labs.overthewire.org</code>。 用户名是 <code>bandit0</code>，密码是 <code>bandit0</code>。</p><p><strong>利用工具</strong></p><p>ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit0@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="1级"><a href="#1级" class="headerlink" title="1级"></a>1级</h3><p>下一级的密码存储在主目录中的名为 <code>readme</code> 的文件中。使用此密码进行记录 使用 SSH 进入 <code>bandit1</code>。每当您找到关卡的密码时， 使用 SSH（在端口 2220 上）登录该关卡并继续游戏。</p><p><strong>利用工具</strong></p><p>ssh</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719101127607.png" alt="image-20240719101127607"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit1@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="2级"><a href="#2级" class="headerlink" title="2级"></a>2级</h3><p>下一级的密码存储在名为 - 的文件中，该文件位于主目录中</p><p><strong>利用工具</strong></p><p>ssh</p><p>难点：特殊字符的文件夹</p><p>请使用 <code>cat ./-</code> 打开</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719102316720.png" alt="image-20240719102316720"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">263JGJPfgU6LtdEvgfWU1XP5yac29mFx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit2@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="3级"><a href="#3级" class="headerlink" title="3级"></a>3级</h3><p>下一级的密码存储在名为空格的文件中 在此文件名中位于主目录中</p><p><strong>利用工具</strong></p><p>ssh</p><p>难点：特殊字符的文件夹</p><p>请使用 <code>cat &quot;&quot;</code> 打开</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719102939147.png" alt="image-20240719102939147"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit3@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="4级"><a href="#4级" class="headerlink" title="4级"></a>4级</h3><p>下一级的密码存储在 inhere 目录的隐藏文件中。</p><p><strong>利用工具</strong></p><p>ssh</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719103214020.png" alt="image-20240719103214020"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit4@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="5级"><a href="#5级" class="headerlink" title="5级"></a>5级</h3><p>下一级的密码存储在唯一人类可读的密码中 <strong>文件</strong>。提示：如果您的终端混乱 向上，尝试 <strong>“重置”</strong> 命令。</p><p>利用工具</p><p>ssh</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719103543769.png" alt="image-20240719103543769"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit5@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="6级"><a href="#6级" class="headerlink" title="6级"></a>6级</h3><p>下一级的密码存储在以下某处的文件中 inhere 目录，并具有以下所有属性：</p><ul><li>人类可读</li><li>大小为 1033 字节</li><li>不可执行</li></ul><p><strong>利用工具</strong></p><p>ssh</p><p>难点：在大量内容内查询文件</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240719104236295.png" alt="image-20240719104236295"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -readable ! -executable -size 1033c</span><br></pre></td></tr></table></figure><ul><li>类型为普通文件（<code>-type f</code>）</li><li>可读（<code>-readable</code>）</li><li>不可执行（<code>! -executable</code>）</li><li>大小为 1033 字节（<code>-size 1033c</code>）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HWasnPhtq9AVKe0dmk45nxy20cvUa6EG</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit6@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="7级"><a href="#7级" class="headerlink" title="7级"></a>7级</h3><p>下一关的密码存储<strong>在 server 的某个地方</strong>，并具有以下所有属性：</p><ul><li>由用户 Bandit7 拥有</li><li>由 Group Bandit6 拥有6</li><li>大小为 33 字节</li></ul><p><strong>利用工具</strong></p><p>ssh</p><p>难点：<code>find</code>指令的运用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user bandit7 -group bandit6 -size 33c 2&gt;/dev/null</span><br></pre></td></tr></table></figure><ul><li><code>/</code>：从根目录开始搜索。</li><li><code>-user bandit7</code>：查找所有者是 <code>bandit7</code> 的文件。</li><li><code>-group bandit6</code>：查找组是 <code>bandit6</code> 的文件。</li><li><code>-size 33c</code>：查找文件大小正好是 33 字节的文件（<code>c</code> 表示字节）。</li><li><code>2&gt;/dev/null</code>：将错误消息（例如权限被拒绝的错误）重定向到 <code>/dev/null</code> 以保持输出干净。</li></ul><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720095814627.png" alt="image-20240720095814627"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit7@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="8级"><a href="#8级" class="headerlink" title="8级"></a>8级</h3><p>The password for the next level is stored in the file <code>data.txt</code> next to the word <code>millionth</code></p><p>下一级的密码存储在<code>data.txt的百万分之一</code>单词旁边的文件</p><p>利用工具</p><p>ssh</p><ul><li><code>grep</code>: 搜索文本文件中匹配指定模式的行。</li><li><code>sort</code>: 对文本文件的行进行排序。</li><li><code>uniq</code>: 报告或省略重复的行。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;millionth&quot; data.txt</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720102924792.png" alt="image-20240720102924792"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit8@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="9级"><a href="#9级" class="headerlink" title="9级"></a>9级</h3><p>下一级的密码存储在文件<code>data.txt</code>中，并且是唯一只出现一次的文本行</p><p><strong>利用工具</strong></p><p>ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort data.txt | uniq -u</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720103229201.png" alt="image-20240720103229201"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4CKMh1JI91bUIZZPXDqGanal4xvAg0JM</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit9@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="10级"><a href="#10级" class="headerlink" title="10级"></a>10级</h3><p>下一级的密码存储在文件中，data.txt在为数不多的人类可读字符串之一中，前面有几个“=” 字符。</p><p>利用工具</p><p>ssh</p><ul><li>使用 <code>strings</code> 命令提取人类可读字符串</li><li>使用 <code>grep</code> 命令过滤包含“=”字符的字符串</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings data.txt | grep &quot;=&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720103918422.png" alt="image-20240720103918422"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit10@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="11级"><a href="#11级" class="headerlink" title="11级"></a>11级</h3><p>下一级的密码存储在文件data.txt中， 其中包含 base64 编码数据</p><p><strong>利用工具</strong></p><p>ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data.txt | base64 --decode</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720104237658.png" alt="image-20240720104237658"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit11@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="12级"><a href="#12级" class="headerlink" title="12级"></a>12级</h3><p>下一级的密码存储在文件data.txt中， 其中所有小写 （a-z） 和大写 （A-Z） 字母都为 旋转 13 个位置</p><p>利用工具</p><p>ssh</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data.txt | tr &#x27;A-Za-z&#x27; &#x27;N-ZA-Mn-za-m&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720104647769.png" alt="image-20240720104647769"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit12@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="13级"><a href="#13级" class="headerlink" title="13级"></a>13级</h3><p>下一级的密码存储在文件data.txt中， 这是重复压缩的文件的十六进制转储。 对于此级别，在 /tmp 下创建一个目录可能很有用 你可以工作。使用难以猜测的目录名称的 mkdir。 或者更好的是，使用命令“mktemp -d”。 然后使用 cp 复制数据文件，并使用 mv 重命名它</p><p><strong>利用工具</strong></p><p>ssh</p><p>使用 <code>mktemp</code> 创建一个难以猜测的临时目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tmp_dir=$(mktemp -d) </span><br><span class="line">echo &quot;Temporary directory created: $tmp_dir&quot;</span><br></pre></td></tr></table></figure><p>将 <code>data.txt</code> 文件复制到临时目录，并重命名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp data.txt &quot;$tmp_dir/data.txt&quot;</span><br><span class="line">cd &quot;$tmp_dir&quot;</span><br></pre></td></tr></table></figure><p> 将16进制转为2进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat data.txt | xxd -r &gt; data</span><br></pre></td></tr></table></figure><p>用 <code>file</code> 来查看文件属性，再用<code>gzip -d</code>、<code>bzip2 -d</code>、<code>tar -xf</code>解压</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720112438428.png" alt="image-20240720112438428"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit13@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="14级"><a href="#14级" class="headerlink" title="14级"></a>14级</h3><p>下一级的密码存储在 /etc/bandit_pass/bandit14 中，只能由用户读取 bandit14 。对于此级别，您不会获得下一个密码，但您 获取可用于登录下一关的私有 SSH 密钥。</p><p>难点：要先更改权限700</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 sshkey.private</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720112941997.png" alt="image-20240720112941997"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAxkkOE83W2cOT7IWhFc9aPaaQmQDdgzuXCv+ppZHa++buSkN+</span><br><span class="line">gg0tcr7Fw8NLGa5+Uzec2rEg0WmeevB13AIoYp0MZyETq46t+jk9puNwZwIt9XgB</span><br><span class="line">ZufGtZEwWbFWw/vVLNwOXBe4UWStGRWzgPpEeSv5Tb1VjLZIBdGphTIK22Amz6Zb</span><br><span class="line">ThMsiMnyJafEwJ/T8PQO3myS91vUHEuoOMAzoUID4kN0MEZ3+XahyK0HJVq68KsV</span><br><span class="line">ObefXG1vvA3GAJ29kxJaqvRfgYnqZryWN7w3CHjNU4c/2Jkp+n8L0SnxaNA+WYA7</span><br><span class="line">jiPyTF0is8uzMlYQ4l1Lzh/8/MpvhCQF8r22dwIDAQABAoIBAQC6dWBjhyEOzjeA</span><br><span class="line">J3j/RWmap9M5zfJ/wb2bfidNpwbB8rsJ4sZIDZQ7XuIh4LfygoAQSS+bBw3RXvzE</span><br><span class="line">pvJt3SmU8hIDuLsCjL1VnBY5pY7Bju8g8aR/3FyjyNAqx/TLfzlLYfOu7i9Jet67</span><br><span class="line">xAh0tONG/u8FB5I3LAI2Vp6OviwvdWeC4nOxCthldpuPKNLA8rmMMVRTKQ+7T2VS</span><br><span class="line">nXmwYckKUcUgzoVSpiNZaS0zUDypdpy2+tRH3MQa5kqN1YKjvF8RC47woOYCktsD</span><br><span class="line">o3FFpGNFec9Taa3Msy+DfQQhHKZFKIL3bJDONtmrVvtYK40/yeU4aZ/HA2DQzwhe</span><br><span class="line">ol1AfiEhAoGBAOnVjosBkm7sblK+n4IEwPxs8sOmhPnTDUy5WGrpSCrXOmsVIBUf</span><br><span class="line">laL3ZGLx3xCIwtCnEucB9DvN2HZkupc/h6hTKUYLqXuyLD8njTrbRhLgbC9QrKrS</span><br><span class="line">M1F2fSTxVqPtZDlDMwjNR04xHA/fKh8bXXyTMqOHNJTHHNhbh3McdURjAoGBANkU</span><br><span class="line">1hqfnw7+aXncJ9bjysr1ZWbqOE5Nd8AFgfwaKuGTTVX2NsUQnCMWdOp+wFak40JH</span><br><span class="line">PKWkJNdBG+ex0H9JNQsTK3X5PBMAS8AfX0GrKeuwKWA6erytVTqjOfLYcdp5+z9s</span><br><span class="line">8DtVCxDuVsM+i4X8UqIGOlvGbtKEVokHPFXP1q/dAoGAcHg5YX7WEehCgCYTzpO+</span><br><span class="line">xysX8ScM2qS6xuZ3MqUWAxUWkh7NGZvhe0sGy9iOdANzwKw7mUUFViaCMR/t54W1</span><br><span class="line">GC83sOs3D7n5Mj8x3NdO8xFit7dT9a245TvaoYQ7KgmqpSg/ScKCw4c3eiLava+J</span><br><span class="line">3btnJeSIU+8ZXq9XjPRpKwUCgYA7z6LiOQKxNeXH3qHXcnHok855maUj5fJNpPbY</span><br><span class="line">iDkyZ8ySF8GlcFsky8Yw6fWCqfG3zDrohJ5l9JmEsBh7SadkwsZhvecQcS9t4vby</span><br><span class="line">9/8X4jS0P8ibfcKS4nBP+dT81kkkg5Z5MohXBORA7VWx+ACohcDEkprsQ+w32xeD</span><br><span class="line">qT1EvQKBgQDKm8ws2ByvSUVs9GjTilCajFqLJ0eVYzRPaY6f++Gv/UVfAPV4c+S0</span><br><span class="line">kAWpXbv5tbkkzbS0eaLPTKgLzavXtQoTtKwrjpolHKIHUz6Wu+n4abfAIRFubOdN</span><br><span class="line">/+aLoRQ0yBDRbdXMsZN/jvY44eM+xRLdRVyMmdPtP8belRi2E2aEzA==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i sshkey.private bandit14@bandit.labs.overthewire.org -p 2220</span><br></pre></td></tr></table></figure><h3 id="15级"><a href="#15级" class="headerlink" title="15级"></a>15级</h3><p>The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720161548980.png" alt="image-20240720161548980"></p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720161600680.png" alt="image-20240720161600680"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MU4VWeTyJk8ROof1qqmcBPaLh7lDCPvS</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit14@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit15@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="16级"><a href="#16级" class="headerlink" title="16级"></a>16级</h3><p>可以通过提交 当前级别的密码到 localhost 上的端口 30001 使用 SSL 加密。</p><ul><li>openssl s_client是使用 SSL/TLS 连接到服务器的简单客户端的实现。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -connect localhost:30001</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720161951361.png" alt="image-20240720161951361"></p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720162031292.png" alt="image-20240720162031292"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit16@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="17级"><a href="#17级" class="headerlink" title="17级"></a>17级</h3><p>可以通过提交 当前级别的密码到 localhost 上的端口，在 31000 到 32000。首先找出这些端口中哪些有服务器 倾听他们。然后找出哪些说SSL，哪些说SSL 不要。只有 1 台服务器将提供下一个凭据，即 其他人只会将您发送给它的任何东西发回给您。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 31000-32000 -sV localhost</span><br></pre></td></tr></table></figure><ul><li>31046/tcp open  echo</li><li>31518/tcp open  ssl/echo</li><li>31691/tcp open  echo</li><li>31790/tcp open  ssl/unknown</li><li>31960/tcp open  echo</li></ul><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720164036288.png" alt="image-20240720164036288"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx&quot; | openssl s_client -connect localhost:31790 -ign_eof</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ</span><br><span class="line">imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ</span><br><span class="line">Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu</span><br><span class="line">DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW</span><br><span class="line">JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX</span><br><span class="line">x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD</span><br><span class="line">KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl</span><br><span class="line">J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd</span><br><span class="line">d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC</span><br><span class="line">YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A</span><br><span class="line">vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama</span><br><span class="line">+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT</span><br><span class="line">8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx</span><br><span class="line">SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd</span><br><span class="line">HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt</span><br><span class="line">SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A</span><br><span class="line">R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi</span><br><span class="line">Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg</span><br><span class="line">R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu</span><br><span class="line">L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni</span><br><span class="line">blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU</span><br><span class="line">YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM</span><br><span class="line">77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b</span><br><span class="line">dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3</span><br><span class="line">vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i sshkey.private bandit17@bandit.labs.overthewire.org -p 2220</span><br></pre></td></tr></table></figure><h3 id="18级"><a href="#18级" class="headerlink" title="18级"></a>18级</h3><p>主目录中有 2 个文件：<strong>passwords.old</strong> 和 <strong>passwords.new</strong>。下一级的密码位于 <strong>passwords.new</strong> 中，并且是 <strong>passwords.old</strong> 和 <strong>passwords.new</strong> 之间唯一已更改的行</p><p><strong>注意：如果您已经解决了此级别并在尝试时看到“再见！ 要登录 Bandit18，这与下一个级别 Bandit19 有关</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EReVavePLFHtFlFsjn3hyzMlvSuSAcRD</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit17@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diff passwords.old passwords.new</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720172236033.png" alt="image-20240720172236033"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bSrACvJvvBSxEM2SGsV5sn09vc3xgqyp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit18@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720172447599.png" alt="image-20240720172447599"></p><h3 id="19级"><a href="#19级" class="headerlink" title="19级"></a>19级</h3><p>下一级的密码存储在文件自述文件中 主目录。不幸的是，有人修改了 .bashrc 以在您使用 SSH 登录时将您注销。</p><p>我们不是使用 SSH 登录计算机，而是通过 SSH 执行命令。首先，我们用来确保自述文件在文件夹中，然后我们可以用来读取它。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ssh bandit18@bandit.labs.overthewire.org -p 2220 ls         </span><br><span class="line">This is a OverTheWire game server. More information on http://www.overthewire.org/wargames</span><br><span class="line"></span><br><span class="line">bandit18@bandit.labs.overthewire.org&#x27;s password: </span><br><span class="line">readme</span><br><span class="line"></span><br><span class="line">$ ssh bandit18@bandit.labs.overthewire.org -p 2220 cat readme </span><br><span class="line">This is a OverTheWire game server. More information on http://www.overthewire.org/wargames</span><br><span class="line"></span><br><span class="line">bandit18@bandit.labs.overthewire.org&#x27;s password: </span><br><span class="line">cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit19@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="20级"><a href="#20级" class="headerlink" title="20级"></a>20级</h3><p>要访问下一级别，您应该使用 setuid 二进制文件 在主目录中。在没有参数的情况下执行它，以了解如何 使用它。此级别的密码可以在通常的 放置 （/etc/bandit_pass），在您使用 setuid 二进制文件之后。</p><p>首先，我们检查 <code>setuid</code> 二进制文件的所有者是谁：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720180047511.png" alt="image-20240720180047511"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bandit20-do cat /etc/bandit_pass/bandit20</span><br></pre></td></tr></table></figure><p>在本例中，所有者是 badit20，组是 bandit19，其中 ‘-rwsr-x—‘ 表示用户 bandit19 可以执行二进制文件，但二进制文件以用户 bandit20 身份执行。</p><p>执行二进制文件表示它只是以另一个用户的身份执行另一个命令（如前所述，这个用户是 bandit20）。这意味着我们可以访问 bandit20 用户密码文件，该文件只能由用户 bandit20 读取。</p><p><img src="https://raw.githubusercontent.com/HB2333/HB2333.github.io/main/image/image-20240720175823912.png" alt="image-20240720175823912"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit20@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="21级"><a href="#21级" class="headerlink" title="21级"></a>21级</h3><p>主目录中有一个 setuid 二进制文件，它执行以下操作：它在指定为命令行参数的端口上与 localhost 建立连接。然后，它从连接中读取一行文本，并将其与上一级 （bandit20） 中的密码进行比较。如果密码正确，它将传输下一关（bandit21）的密码。</p><ul><li>使用“netcat”，我们可以在服务器模式下创建一个连接 - 该连接侦听入站连接。为了让 netcat 发送密码，我使用 echo 并将其通过管道传输到 netcat。</li><li>使用端口 1234 运行 setuid 二进制文件意味着它将连接到我们的 netcat 服务器，接收输入的密码并发回下一个密码。</li></ul><p><img src="https://s2.loli.net/2024/07/26/1ZRyYj5JBakD3MU.png" alt="image-20240722103620493"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EeoULMCra2q0dSkYj561DX7s1CpBuOBt</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit21@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="22级"><a href="#22级" class="headerlink" title="22级"></a>22级</h3><p>程序从基于时间的作业调度程序 cron 定期自动运行。在 /etc/cron.d/ 中查找配置，并查看正在执行的命令。</p><ul><li><p>首先，我们看一下“/etc/cron.d”文件夹中的内容。具体来说，对于这个级别，我查看了 cronjob ‘cronjob_bandit22’。</p></li><li><p>此 cronjob 以 bandit22 用户身份运行文件。五颗星表示它每分钟都在运行，每天都在运行。要知道到底执行了什么，我们需要看一下 bash 文件。/usr/bin/cronjob_bandit22.sh</p></li><li><p>此文件在“tmp”文件夹中创建一个文件，并向所有人授予读取权限（由最后 4 个表示）。然后，它将 bandit22 密码文件的输入复制到新创建的文件中。</p></li><li><p>因此，下一级的密码在此创建的文件中：</p></li></ul><p><img src="https://s2.loli.net/2024/07/26/PjxcnMLeWbNRt2E.png" alt="image-20240722104417005"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tRae0UfB9v0UzbCdn9cY0gQnds9GF58Q</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 2220 bandit22@bandit.labs.overthewire.org</span><br></pre></td></tr></table></figure><h3 id="23级"><a href="#23级" class="headerlink" title="23级"></a>23级</h3>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
